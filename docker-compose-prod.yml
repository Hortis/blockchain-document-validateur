version: '2'
services:
  rcgechvalidator:
    image: blockchainpartnerhub/geneva_validateur_rcgechvalidator:1.0.1
    environment:
      - TX_HEX=d3851f8ee9bbd79a4cf332999a89a4b2c6b8d5c4c0c001ea85e95ab7997843c0
      - WS_URI=... # WS url to connect to the blockchain
      - LOCKED_ADDR=... # List of addresses that were used in the past
      - TIMEOUT=1653618789 # Unix time stamp to setup the moment from when the key is considered invalid
    dns:
      - 8.8.8.8
    working_dir: /app
    command: "/app/api --host 0.0.0.0 --port=8090"
    networks:
      - backend

  webapp:
    image: registry.hortis.ch:8119/geneva_validateur_webapp:1.1.0
    environment:
      - API_HOST=rcgechvalidator:8090 # API host, is equal to the <api container name>:<port>
      - MAIN_URI=blockstamp
      - VIRTUAL_HOST=local.etat-ge.ch
      - CSRF_TIME_LIMIT=360
    working_dir: /app
    command: /app/webapp
    networks:
      - frontend
      - backend
    volumes:
      - ./SwissSignGoldCA-G2.crt:/etc/ssl/certs/SwissSignGoldCA-G2.crt:ro
      - "./local.etat-ge.ch.cer:/app/myservice.cert"
      - "./local.etat-ge.ch.key:/app/myservice.key"


  nginx-proxy:
    image: blockchainpartnerhub/geneva_nginx_proxy:1.0
    ports:
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - "./local.etat-ge.ch.cer:/etc/nginx/certs/local.etat-ge.ch.crt:ro" # Edit path to the right certs folder, name should be example.com.crt and example.com.key
      - "./local.etat-ge.ch.key:/etc/nginx/certs/local.etat-ge.ch.key:ro" # Edit path to the right certs folder, name should be example.com.crt and example.com.key
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
    networks:
      - frontend

networks:
  frontend:
  backend:


# Add these env vars to services that need to be reached from the Internet
# VIRTUAL_HOST=example.com ; LETSENCRYPT_HOST=example.com ; LETSENCRYPT_EMAIL= foo@example.com
